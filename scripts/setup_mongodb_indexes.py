#!/usr/bin/env python3
"""
Script para configurar √≠ndices de MongoDB para optimizar el sistema de virtualizaci√≥n.
Ejecutar una vez despu√©s del deployment inicial para mejorar el performance.
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from src.shared.database import get_db
import logging

def create_virtualization_indexes():
    """
    Crea √≠ndices espec√≠ficos para optimizar el sistema de virtualizaci√≥n.
    """
    db = get_db()
    indexes_created = 0
    
    print("üöÄ Configurando √≠ndices de MongoDB para virtualizaci√≥n...")
    print("=" * 60)
    
    # √çndices para virtual_generation_tasks (cola de tareas)
    try:
        # √çndice compuesto para consultas de cola
        db.virtual_generation_tasks.create_index([
            ("status", 1),
            ("priority", 1), 
            ("created_at", 1)
        ], name="queue_processing_idx")
        print("‚úÖ √çndice creado: virtual_generation_tasks.queue_processing_idx")
        indexes_created += 1
        
        # √çndice para consultas por estudiante
        db.virtual_generation_tasks.create_index([
            ("student_id", 1),
            ("status", 1)
        ], name="student_queue_status_idx")
        print("‚úÖ √çndice creado: virtual_generation_tasks.student_queue_status_idx")
        indexes_created += 1
        
        # √çndice para limpieza de tareas antiguas
        db.virtual_generation_tasks.create_index([
            ("status", 1),
            ("completed_at", 1)
        ], name="cleanup_idx")
        print("‚úÖ √çndice creado: virtual_generation_tasks.cleanup_idx")
        indexes_created += 1
        
    except Exception as e:
        print(f"‚ö†Ô∏è  Error creando √≠ndices para virtual_generation_tasks: {str(e)}")
    
    # √çndices para virtual_modules
    try:
        # √çndice para consultas por estudiante y m√≥dulo
        db.virtual_modules.create_index([
            ("student_id", 1),
            ("module_id", 1)
        ], name="student_module_idx", unique=True)
        print("‚úÖ √çndice creado: virtual_modules.student_module_idx (√∫nico)")
        indexes_created += 1
        
        # √çndice para consultas por m√≥dulo original
        db.virtual_modules.create_index([
            ("module_id", 1),
            ("status", 1)
        ], name="module_status_idx")
        print("‚úÖ √çndice creado: virtual_modules.module_status_idx")
        indexes_created += 1
        
        # √çndice para estado de generaci√≥n
        db.virtual_modules.create_index([
            ("generation_status", 1),
            ("student_id", 1)
        ], name="generation_status_idx")
        print("‚úÖ √çndice creado: virtual_modules.generation_status_idx")
        indexes_created += 1
        
    except Exception as e:
        print(f"‚ö†Ô∏è  Error creando √≠ndices para virtual_modules: {str(e)}")
    
    # √çndices para modules (optimizar virtualization readiness)
    try:
        # √çndice para m√≥dulos habilitados para virtualizaci√≥n
        db.modules.create_index([
            ("study_plan_id", 1),
            ("ready_for_virtualization", 1)
        ], name="virtualization_ready_idx")
        print("‚úÖ √çndice creado: modules.virtualization_ready_idx")
        indexes_created += 1
        
        # √çndice para detecci√≥n de cambios
        db.modules.create_index([
            ("last_content_update", 1)
        ], name="content_update_idx")
        print("‚úÖ √çndice creado: modules.content_update_idx")
        indexes_created += 1
        
    except Exception as e:
        print(f"‚ö†Ô∏è  Error creando √≠ndices para modules: {str(e)}")
    
    return indexes_created

def create_general_performance_indexes():
    """
    Crea √≠ndices adicionales para mejorar el performance general.
    """
    db = get_db()
    indexes_created = 0
    
    print("\nüìà Configurando √≠ndices de performance general...")
    print("=" * 60)
    
    try:
        # √çndices para topics (optimizar consultas de contenido)
        db.topics.create_index([
            ("module_id", 1),
            ("status", 1)
        ], name="module_topics_idx", background=True)
        print("‚úÖ √çndice creado: topics.module_topics_idx")
        indexes_created += 1
        
        # √çndices para evaluations
        db.evaluations.create_index([
            ("module_id", 1),
            ("status", 1)
        ], name="module_evaluations_idx", background=True)
        print("‚úÖ √çndice creado: evaluations.module_evaluations_idx")
        indexes_created += 1
        
        # √çndices para users (consultas de perfil cognitivo)
        db.users.create_index([
            ("role", 1),
            ("status", 1)
        ], name="user_role_status_idx", background=True)
        print("‚úÖ √çndice creado: users.user_role_status_idx")
        indexes_created += 1
        
    except Exception as e:
        print(f"‚ö†Ô∏è  Error creando √≠ndices de performance: {str(e)}")
    
    return indexes_created

def verify_indexes():
    """
    Verifica que los √≠ndices se crearon correctamente.
    """
    db = get_db()
    
    print("\nüîç Verificando √≠ndices creados...")
    print("=" * 60)
    
    collections_to_check = [
        "virtual_generation_tasks",
        "virtual_modules", 
        "modules",
        "virtual_topics",
        "content_templates",
        "topics",
        "evaluations",
        "users"
    ]
    
    total_indexes = 0
    for collection_name in collections_to_check:
        try:
            collection = db[collection_name]
            indexes = list(collection.list_indexes())
            print(f"üìã {collection_name}: {len(indexes)} √≠ndices")
            
            for index in indexes:
                if index.get("name") != "_id_":
                    print(f"   - {index.get('name', 'unnamed')}")
            
            total_indexes += len(indexes)
            
        except Exception as e:
            print(f"‚ö†Ô∏è  Error verificando √≠ndices para {collection_name}: {str(e)}")
    
    print(f"\nüìä Total de √≠ndices en el sistema: {total_indexes}")
    return total_indexes

def main():
    """
    Funci√≥n principal para ejecutar la configuraci√≥n de √≠ndices.
    """
    print("üéØ Configurando √≠ndices de MongoDB para Sistema de Virtualizaci√≥n")
    print("=" * 70)
    
    try:
        virtualization_indexes = create_virtualization_indexes()
        
        # Crear √≠ndices de performance general
        performance_indexes = create_general_performance_indexes()
        
        # Verificar √≠ndices
        total_indexes = verify_indexes()
        
        print("\n" + "=" * 70)
        print("‚ú® Configuraci√≥n de √≠ndices completada exitosamente!")
        print(f"üìä Resumen:")
        print(f"   - √çndices de virtualizaci√≥n: {virtualization_indexes}")
        print(f"   - √çndices de performance: {performance_indexes}")
        print(f"   - Total creados: {virtualization_indexes + performance_indexes}")
        print(f"   - Total en sistema: {total_indexes}")
        
        print("\nüí° Recomendaciones:")
        print("   - Monitorear el performance de consultas en producci√≥n")
        print("   - Revisar el uso de √≠ndices con db.collection.getIndexes()")
        print("   - Considerar √≠ndices parciales para colecciones muy grandes")
        
    except Exception as e:
        print(f"‚ùå Error durante la configuraci√≥n de √≠ndices: {str(e)}")
        sys.exit(1)

if __name__ == "__main__":
    main() 